/*amd /publishing/container/widgetContainer.xml 17117 1011b9153e1ca7a18632608864414c3b0d387ec44515c63f37c850f14a2875f8 */
define({declaration:{A:{version:'1.0',encoding:'UTF-8'}},E:[{T:1,N:'html',A:{xmlns:'http://www.w3.org/1999/xhtml','xmlns:ev':'http://www.w3.org/2001/xml-events','xmlns:w2':'http://www.inswave.com/websquare','xmlns:xf':'http://www.w3.org/2002/xforms'},E:[{T:1,N:'head',E:[{T:1,N:'w2:type',E:[{T:3,text:'COMPONENT'}]},{T:1,N:'w2:buildDate'},{T:1,N:'w2:MSA'},{T:1,N:'xf:model',E:[{T:1,N:'w2:dataCollection',A:{baseNode:'map'}},{T:1,N:'w2:workflowCollection'}]},{T:1,N:'w2:layoutInfo'},{T:1,N:'w2:publicInfo',A:{method:''}},{T:1,N:'script',A:{lazy:'false',type:'text/javascript'},E:[{T:4,cdata:function(scopeObj){with(scopeObj){
scwin.onpageload = function() {
	// Widget Call
	widgetContainer1.addWidgets({
            id : "widget0",
            title : "Widget01",
            src : "",
            scope : true,
            x : 0,
            y : 0,
            unitWidth : 1,
            unitHeight : 1
        });

        widgetContainer1.addWidgets({
            id : "widget1",
            title : "Widget02",
            src : "",
            scope : true,
            x : 1,
            y : 0,
            unitWidth : 1,
            unitHeight : 1
        });

        widgetContainer1.addWidgets({
            id : "widget2",
            title : "Widget03",
             src : "",
            scope : true,
            x : 2,
            y : 0,
            unitWidth : 1,
            unitHeight : 1
        });
        
        widgetContainer1.addWidgets({
            id : "widget3",
            title : "Widget04",
             src : "",
            scope : true,
            x : 0,
            y : 1,
            unitWidth : 1,
            unitHeight : 1
        });
        
        widgetContainer1.addWidgets({
            id : "widget4",
            title : "Widget05",
             src : "",
            scope : true,
            x : 1,
            y : 1,
            unitWidth : 1,
            unitHeight : 1
        });
        
        widgetContainer1.addWidgets({
            id : "widget5",
            title : "Widget06",
             src : "",
            scope : true,
            x : 2,
            y : 1,
            unitWidth : 1,
            unitHeight : 1
        });
};

}}}]}]},{T:1,N:'body',A:{'ev:onpageload':'scwin.onpageload'},E:[{T:1,N:'xf:group',A:{class:'sub_contents pub',id:'',style:''},E:[{T:1,N:'xf:group',A:{class:'pgtbox',id:'',style:''},E:[{T:1,N:'w2:textbox',A:{class:'pgt_tit',id:'',label:'Publishing Template - WidgetContainer',style:''}}]},{T:1,N:'xf:group',A:{id:'',class:'titbox'},E:[{T:1,N:'w2:textbox',A:{style:'',id:'',label:'위젯 생성 및 관리. 내부에 위젯을 포함하며 위젯들 간의 상호작용을 관리. 드래그-앤-드롭을 통한 위젯 재배치 및 리사이징이 가능. WidgetContainer는 내부적으로 이차원 격자로 구성됨. 단위 길이는 WindowContainer의 가로 길이를 cols 속성으로 지정한 값 만큼 나눈 결과. 단위 높이는 unitHeightPixel. 이차원 격자 구조 내에서 위젯 이동 및 리사이징이 가능. 내부 위젯들의 정보를 JSON을 통해 추출하고 원복할 수 있음. 즉, 특정 화면 설정을 저장하는 것이 가능.',class:'txt_guide'}}]},{T:1,N:'xf:group',A:{id:'',style:'height:640px;',class:'samplebox'},E:[{T:1,N:'w2:widgetContainer',A:{widgetMove:'',minUnitWidth:'',cols:'3',horizontalMargin:'10',verticalMargin:'10',params:'false',widgetResize:'',mode:'switch',threshold:'null',id:'widgetContainer1',style:'width: 100%;height: 100%;',minUnitHeight:'',unitHeightPixel:'320'}}]},{T:1,N:'xf:group',A:{id:'',class:'titbox'},E:[{T:1,N:'w2:textbox',A:{tagname:'h3',style:'',id:'',label:'Property',class:''}},{T:1,N:'xf:group',A:{class:'rt',id:'',style:''},E:[{T:1,N:'w2:span',A:{class:'badge default',id:'',label:'Defualt option',style:''}},{T:1,N:'w2:span',A:{class:'badge',id:'',label:'option',style:''}}]}]},{T:1,N:'xf:group',A:{id:'',class:'tblbox'},E:[{T:1,N:'xf:group',A:{tagname:'table',style:'',id:'',class:'w2tb tbl'},E:[{T:1,N:'w2:attributes',E:[{T:1,N:'w2:summary'}]},{T:1,N:'xf:group',A:{tagname:'colgroup'},E:[{T:1,N:'xf:group',A:{tagname:'col',style:'width:20%;'}},{T:1,N:'xf:group',A:{tagname:'col',style:''}}]},{T:1,N:'xf:group',A:{tagname:'tr',style:''},E:[{T:1,N:'xf:group',A:{tagname:'th',style:'',class:'w2tb_th'},E:[{T:1,N:'w2:textbox',A:{id:'',label:'속성',style:'',tagname:'p'}}]},{T:1,N:'xf:group',A:{tagname:'th',style:'',class:'w2tb_th tac'},E:[{T:1,N:'w2:textbox',A:{id:'',label:'설명',style:'',tagname:'p'}}]}]},{T:1,N:'xf:group',A:{tagname:'tr',style:''},E:[{T:1,N:'xf:group',A:{tagname:'th',style:'',class:'w2tb_th'},E:[{T:1,N:'w2:textbox',A:{id:'',label:'class',style:'',tagname:'p'}}]},{T:1,N:'xf:group',A:{tagname:'td',style:'',class:'w2tb_td'},E:[{T:1,N:'w2:textbox',A:{id:'',label:'HTML의 class 속성과 동일한 기능을 제공. CSS 파일이나 style 블럭에 정의한 여러 개의 class를 공백으로 구분하여 적용 가능.<br/>Engine 내부에서 각 컴포넌트 별로 지정된 class를 적용하나, class 속성을 이용하여 컴포넌트의 CSS를 제어 가능.',style:'',tagname:'p'}}]}]},{T:1,N:'xf:group',A:{tagname:'tr'},E:[{T:1,N:'xf:group',A:{tagname:'th',class:'w2tb_th'},E:[{T:1,N:'w2:attributes',E:[{T:1,N:'w2:scope',E:[{T:3,text:'row'}]}]},{T:1,N:'w2:textbox',A:{id:'',label:'cols',style:'',tagname:'p'}}]},{T:1,N:'xf:group',A:{tagname:'td',class:'w2tb_td'},E:[{T:1,N:'w2:attributes'},{T:1,N:'w2:textbox',A:{id:'',label:'widgetContainer의 열의 갯수. widgetContainer은 자신의 가로 길이를 cols의 갯수만큼 나누어 단위 길이를 결정한다.',style:'',tagname:'p'}},{T:1,N:'xf:group',A:{class:'grp_option',id:'',style:''},E:[{T:1,N:'w2:span',A:{class:'badge default txt',id:'',label:'1',style:''}}]}]}]},{T:1,N:'xf:group',A:{tagname:'tr'},E:[{T:1,N:'xf:group',A:{tagname:'th',class:'w2tb_th'},E:[{T:1,N:'w2:attributes',E:[{T:1,N:'w2:scope',E:[{T:3,text:'row'}]}]},{T:1,N:'w2:textbox',A:{id:'',label:'horizontalMargin',style:'',tagname:'p'}}]},{T:1,N:'xf:group',A:{tagname:'td',class:'w2tb_td'},E:[{T:1,N:'w2:attributes'},{T:1,N:'w2:textbox',A:{id:'',label:'위젯 간의 수평 마진. (단위: 픽셀)',style:'',tagname:'p'}},{T:1,N:'xf:group',A:{class:'grp_option',id:'',style:''},E:[{T:1,N:'w2:span',A:{class:'badge default txt',id:'',label:'0',style:''}}]}]}]},{T:1,N:'xf:group',A:{tagname:'tr'},E:[{T:1,N:'xf:group',A:{tagname:'th',class:'w2tb_th'},E:[{T:1,N:'w2:attributes',E:[{T:1,N:'w2:scope',E:[{T:3,text:'row'}]}]},{T:1,N:'w2:textbox',A:{id:'',label:'id',style:'',tagname:'p'}}]},{T:1,N:'xf:group',A:{tagname:'td',class:'w2tb_td'},E:[{T:1,N:'w2:attributes'},{T:1,N:'w2:textbox',A:{id:'',label:'컴포넌트 ID.<br/>컴포넌트 ID는 전역 객체로 할당됨. 각 컴포넌트 ID를 통해 Script에서 해당 컴포넌트에 접근 가능.',style:'',tagname:'p'}}]}]},{T:1,N:'xf:group',A:{tagname:'tr'},E:[{T:1,N:'xf:group',A:{tagname:'th',class:'w2tb_th'},E:[{T:1,N:'w2:attributes',E:[{T:1,N:'w2:scope',E:[{T:3,text:'row'}]}]},{T:1,N:'w2:textbox',A:{id:'',label:'maxUnitHeight',style:'',tagname:'p'}}]},{T:1,N:'xf:group',A:{tagname:'td',class:'w2tb_td'},E:[{T:1,N:'w2:attributes'},{T:1,N:'w2:textbox',A:{id:'',label:'widget의 최대 단위 높이.',style:'',tagname:'p'}}]}]},{T:1,N:'xf:group',A:{tagname:'tr'},E:[{T:1,N:'xf:group',A:{tagname:'th',class:'w2tb_th'},E:[{T:1,N:'w2:attributes',E:[{T:1,N:'w2:scope',E:[{T:3,text:'row'}]}]},{T:1,N:'w2:textbox',A:{id:'',label:'maxUnitHeight<br/>',style:'',tagname:'p'}}]},{T:1,N:'xf:group',A:{tagname:'td',class:'w2tb_td'},E:[{T:1,N:'w2:attributes'},{T:1,N:'w2:textbox',A:{id:'',label:'widget의 최대 단위 높이.',style:'',tagname:'p'}}]}]},{T:1,N:'xf:group',A:{tagname:'tr'},E:[{T:1,N:'xf:group',A:{tagname:'th',class:'w2tb_th'},E:[{T:1,N:'w2:attributes',E:[{T:1,N:'w2:scope',E:[{T:3,text:'row'}]}]},{T:1,N:'w2:textbox',A:{id:'',label:'maxUnitWidth',style:'',tagname:'p'}}]},{T:1,N:'xf:group',A:{tagname:'td',class:'w2tb_td'},E:[{T:1,N:'w2:attributes'},{T:1,N:'w2:textbox',A:{id:'',label:'widget의 최대 단위 길이.',style:'',tagname:'p'}}]}]},{T:1,N:'xf:group',A:{tagname:'tr'},E:[{T:1,N:'xf:group',A:{tagname:'th',class:'w2tb_th'},E:[{T:1,N:'w2:attributes',E:[{T:1,N:'w2:scope',E:[{T:3,text:'row'}]}]},{T:1,N:'w2:textbox',A:{id:'',label:'minUnitHeight',style:'',tagname:'p'}}]},{T:1,N:'xf:group',A:{tagname:'td',class:'w2tb_td'},E:[{T:1,N:'w2:attributes'},{T:1,N:'w2:textbox',A:{id:'',label:'widget의 최소 단위 높이.',style:'',tagname:'p'}}]}]},{T:1,N:'xf:group',A:{tagname:'tr'},E:[{T:1,N:'xf:group',A:{tagname:'th',class:'w2tb_th'},E:[{T:1,N:'w2:attributes',E:[{T:1,N:'w2:scope',E:[{T:3,text:'row'}]}]},{T:1,N:'w2:textbox',A:{id:'',label:'minUnitWidth',style:'',tagname:'p'}}]},{T:1,N:'xf:group',A:{tagname:'td',class:'w2tb_td'},E:[{T:1,N:'w2:attributes'},{T:1,N:'w2:textbox',A:{id:'',label:'widget의 최소 단위 길이.',style:'',tagname:'p'}},{T:1,N:'xf:group',A:{class:'grp_option',id:'',style:''},E:[{T:1,N:'w2:span',A:{class:'badge default txt',id:'',label:'1',style:''}}]}]}]},{T:1,N:'xf:group',A:{tagname:'tr'},E:[{T:1,N:'xf:group',A:{tagname:'th',class:'w2tb_th'},E:[{T:1,N:'w2:attributes',E:[{T:1,N:'w2:scope',E:[{T:3,text:'row'}]}]},{T:1,N:'w2:textbox',A:{id:'',label:'mode',style:'',tagname:'p'}}]},{T:1,N:'xf:group',A:{tagname:'td',class:'w2tb_td'},E:[{T:1,N:'w2:attributes'},{T:1,N:'w2:textbox',A:{id:'',label:'widget간의 충돌에 대한 widgetContainer의 기본동작을 설정한다.',style:'',tagname:'p'}},{T:1,N:'xf:group',A:{class:'grp_option',id:'',style:''},E:[{T:1,N:'xf:group',A:{id:''},E:[{T:1,N:'w2:span',A:{class:'badge default',id:'',label:'pushpull ',style:''}},{T:1,N:'w2:textbox',A:{id:'',label:'가능한 모든 widget을 위로 끌어 올리며, 충돌이 일어나는 경우 충돌이 일어난 widget들을 아래로 밀어 내린다.',style:'',tagname:'p'}}]},{T:1,N:'xf:group',A:{id:''},E:[{T:1,N:'w2:span',A:{class:'badge ',id:'',label:'switch',style:''}},{T:1,N:'w2:textbox',A:{id:'',label:'충돌이 일어날 시 충돌이 발생한 widget과 위치전환을 시도한다. 단, 자신보다 작은 widget과만 위치전환이 가능하다.',style:'',tagname:'p'}}]}]}]}]},{T:1,N:'xf:group',A:{tagname:'tr'},E:[{T:1,N:'xf:group',A:{tagname:'th',class:'w2tb_th'},E:[{T:1,N:'w2:attributes',E:[{T:1,N:'w2:scope',E:[{T:3,text:'row'}]}]},{T:1,N:'w2:textbox',A:{id:'',label:'params',style:'',tagname:'p'}}]},{T:1,N:'xf:group',A:{tagname:'td',class:'w2tb_td'},E:[{T:1,N:'w2:attributes'},{T:1,N:'w2:textbox',A:{id:'',label:'widget 객체가 저장하고 있는 사용자 정의 데이터.<br/>런타임 도중에 setParams를 통해 재정의 될 수 있고, getParams를 통해 가져올 수 있다.<br/>또한, 이 값은 getWidgetInfo나 exportWidgets 시 \'params\'라는 속성으로 추출된다.',style:'',tagname:'p'}}]}]},{T:1,N:'xf:group',A:{tagname:'tr'},E:[{T:1,N:'xf:group',A:{tagname:'th',class:'w2tb_th'},E:[{T:1,N:'w2:attributes',E:[{T:1,N:'w2:scope',E:[{T:3,text:'row'}]}]},{T:1,N:'w2:textbox',A:{id:'',label:'preventMaximizeByTitle',style:'',tagname:'p'}}]},{T:1,N:'xf:group',A:{tagname:'td',class:'w2tb_td'},E:[{T:1,N:'w2:attributes'},{T:1,N:'w2:textbox',A:{id:'',label:'widget의 title을 더블클릭 했을 때, widget의 최대화를 사용할 지 여부.',style:'',tagname:'p'}},{T:1,N:'xf:group',A:{class:'grp_option',id:'',style:''},E:[{T:1,N:'w2:span',A:{class:'badge default',id:'',label:'false',style:''}}]}]}]},{T:1,N:'xf:group',A:{tagname:'tr'},E:[{T:1,N:'xf:group',A:{tagname:'th',class:'w2tb_th'},E:[{T:1,N:'w2:attributes',E:[{T:1,N:'w2:scope',E:[{T:3,text:'row'}]}]},{T:1,N:'w2:textbox',A:{id:'',label:'processMsgFrame',style:'',tagname:'p'}}]},{T:1,N:'xf:group',A:{tagname:'td',class:'w2tb_td'},E:[{T:1,N:'w2:attributes'},{T:1,N:'w2:textbox',A:{id:'',label:'비동기 통신 중 processMsg를 widget WFrame에 내부에 표시.',style:'',tagname:'p'}},{T:1,N:'xf:group',A:{class:'grp_option',id:'',style:''},E:[{T:1,N:'xf:group',A:{id:''},E:[{T:1,N:'w2:span',A:{class:'badge',id:'',label:'true',style:''}},{T:1,N:'w2:textbox',A:{id:'',label:'Widget WFrame 내부에 표시.',style:'',tagname:'p'}}]},{T:1,N:'xf:group',A:{id:''},E:[{T:1,N:'w2:span',A:{class:'badge default',id:'',label:'false',style:''}},{T:1,N:'w2:textbox',A:{id:'',label:'전체 화면에 표시.',style:'',tagname:'p'}}]}]}]}]},{T:1,N:'xf:group',A:{tagname:'tr'},E:[{T:1,N:'xf:group',A:{tagname:'th',class:'w2tb_th'},E:[{T:1,N:'w2:attributes',E:[{T:1,N:'w2:scope',E:[{T:3,text:'row'}]}]},{T:1,N:'w2:textbox',A:{id:'',label:'threshold',style:'',tagname:'p'}}]},{T:1,N:'xf:group',A:{tagname:'td',class:'w2tb_td'},E:[{T:1,N:'w2:attributes'},{T:1,N:'w2:textbox',A:{id:'',label:'widgetContainer의 가로 사이즈가 threshold보다 작아지면, 하나의 칼럼에 위젯들을 나열한다.<br/>또한, threshold를 넘었을 경우 move와 resize가 불가능해진다.<br/>모바일 편의성을 위한 옵션으로, 설정하지 않았을 경우 widgetContainer의 사이즈가 작아져도 위젯들은 원래의 위치에 렌더된다.',style:'',tagname:'p'}}]}]},{T:1,N:'xf:group',A:{tagname:'tr'},E:[{T:1,N:'xf:group',A:{tagname:'th',class:'w2tb_th'},E:[{T:1,N:'w2:attributes',E:[{T:1,N:'w2:scope',E:[{T:3,text:'row'}]}]},{T:1,N:'w2:textbox',A:{id:'',label:'unitHeightPixel',style:'',tagname:'p'}}]},{T:1,N:'xf:group',A:{tagname:'td',class:'w2tb_td'},E:[{T:1,N:'w2:attributes'},{T:1,N:'w2:textbox',A:{id:'',label:'widgetContainer의 단위 높이의 픽셀값. unitHeightPixel은 height === 1 인 widget의 실제 높이가 된다.',style:'',tagname:'p'}},{T:1,N:'xf:group',A:{class:'grp_option',id:'',style:''},E:[{T:1,N:'w2:span',A:{class:'badge default txt',id:'',label:'25',style:''}}]}]}]},{T:1,N:'xf:group',A:{tagname:'tr'},E:[{T:1,N:'xf:group',A:{tagname:'th',class:'w2tb_th'},E:[{T:1,N:'w2:attributes',E:[{T:1,N:'w2:scope',E:[{T:3,text:'row'}]}]},{T:1,N:'w2:textbox',A:{id:'',label:'verticalMargin',style:'',tagname:'p'}}]},{T:1,N:'xf:group',A:{tagname:'td',class:'w2tb_td'},E:[{T:1,N:'w2:attributes'},{T:1,N:'w2:textbox',A:{id:'',label:'위젯 간의 수직 마진. (단위: 픽셀)',style:'',tagname:'p'}},{T:1,N:'xf:group',A:{class:'grp_option',id:'',style:''},E:[{T:1,N:'w2:span',A:{class:'badge default txt',id:'',label:'0',style:''}}]}]}]},{T:1,N:'xf:group',A:{tagname:'tr'},E:[{T:1,N:'xf:group',A:{tagname:'th',class:'w2tb_th'},E:[{T:1,N:'w2:attributes',E:[{T:1,N:'w2:scope',E:[{T:3,text:'row'}]}]},{T:1,N:'w2:textbox',A:{id:'',label:'widgetMove',style:'',tagname:'p'}}]},{T:1,N:'xf:group',A:{tagname:'td',class:'w2tb_td'},E:[{T:1,N:'w2:attributes'},{T:1,N:'w2:textbox',A:{id:'',label:'widget들의 이동 가능 여부.',style:'',tagname:'p'}},{T:1,N:'xf:group',A:{class:'grp_option',id:'',style:''},E:[{T:1,N:'w2:span',A:{class:'badge default',id:'',label:'true',style:''}}]}]}]},{T:1,N:'xf:group',A:{tagname:'tr'},E:[{T:1,N:'xf:group',A:{tagname:'th',class:'w2tb_th'},E:[{T:1,N:'w2:attributes',E:[{T:1,N:'w2:scope',E:[{T:3,text:'row'}]}]},{T:1,N:'w2:textbox',A:{id:'',label:'widgetResize',style:'',tagname:'p'}}]},{T:1,N:'xf:group',A:{tagname:'td',class:'w2tb_td'},E:[{T:1,N:'w2:attributes'},{T:1,N:'w2:textbox',A:{id:'',label:'widget들의 리사이징 가능 여부.',style:'',tagname:'p'}},{T:1,N:'xf:group',A:{class:'grp_option',id:'',style:''},E:[{T:1,N:'w2:span',A:{class:'badge default',id:'',label:'true',style:''}}]}]}]}]}]},{T:1,N:'xf:group',A:{id:'',class:'titbox'},E:[{T:1,N:'w2:textbox',A:{tagname:'h3',style:'',id:'',label:'03. CSS Overriding',class:''}}]},{T:1,N:'xf:group',A:{id:'',class:'tblbox'},E:[{T:1,N:'xf:group',A:{tagname:'table',style:'',id:'',class:'wq_tb w2tb tbl'},E:[{T:1,N:'w2:attributes',E:[{T:1,N:'w2:summary'}]},{T:1,N:'xf:group',A:{tagname:'colgroup'},E:[{T:1,N:'xf:group',A:{tagname:'col',style:'width:20%;'}},{T:1,N:'xf:group',A:{tagname:'col',style:''}}]},{T:1,N:'xf:group',A:{tagname:'tr',style:''},E:[{T:1,N:'xf:group',A:{tagname:'th',style:'',class:'w2tb_th'},E:[{T:3,text:'Class'}]},{T:1,N:'xf:group',A:{tagname:'th',style:'',class:'w2tb_th'},E:[{T:3,text:'Description'}]}]},{T:1,N:'xf:group',A:{tagname:'tr',style:''},E:[{T:1,N:'xf:group',A:{tagname:'th',style:'',class:'w2tb_th'},E:[{T:3,text:'w2widget'}]},{T:1,N:'xf:group',A:{tagname:'td',style:'',class:'w2tb_td'},E:[{T:3,text:'widget&nbsp;아이템을&nbsp;감싸는&nbsp;영역'}]}]},{T:1,N:'xf:group',A:{tagname:'tr',style:''},E:[{T:1,N:'xf:group',A:{tagname:'th',class:'w2tb_th'},E:[{T:3,text:'\r\n    						w2widget_title\r\n    						'},{T:1,N:'w2:attributes',E:[{T:1,N:'w2:scope',E:[{T:3,text:'row'}]}]}]},{T:1,N:'xf:group',A:{tagname:'td',class:'w2tb_td'},E:[{T:3,text:'\r\n    						widget&nbsp;title영역\r\n    						'},{T:1,N:'w2:attributes'}]}]},{T:1,N:'xf:group',A:{tagname:'tr',style:''},E:[{T:1,N:'xf:group',A:{tagname:'th',class:'w2tb_th'},E:[{T:3,text:'\r\n    						w2widget_content\r\n    						'},{T:1,N:'w2:attributes',E:[{T:1,N:'w2:scope',E:[{T:3,text:'row'}]}]}]},{T:1,N:'xf:group',A:{tagname:'td',class:'w2tb_td'},E:[{T:3,text:'\r\n    						widget&nbsp;contents영역\r\n    						'},{T:1,N:'w2:attributes'}]}]}]}]}]}]}]}]})